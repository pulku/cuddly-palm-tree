{"version":3,"sources":["actions/types.js","components/Project/ProjectItem.js","actions/projectActions.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["GET_ERRORS","ProjectItem","onDeleteClick","id","_this","props","deleteProject","project","this","react_default","a","createElement","className","projectIdentifier","projectName","description","Link","to","concat","onClick","bind","Component","connect","_ref5","Object","asyncToGenerator","regenerator_default","mark","_callee5","dispatch","wrap","_context5","prev","next","window","confirm","axios","delete","type","payload","t0","response","data","body","stop","_x5","apply","arguments","CreateProjectButton","Fragment","Dashboard","getProjects","projects","Project_CreateProjectButton","map","Project_ProjectItem","key","state","_ref2","_callee2","res","_context2","get","sent","_x2","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","_this$props$security","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","startDate","endDate","errors","onChange","assertThisInitialized","onSubmit","nextProps","nextContext","setState","e","defineProperty","target","name","value","preventDefault","newProject","createProject","history","classnames","is-invalid","placeholder","_ref","_callee","_context","post","push","_x","initialState","project_tasks","project_task","combineReducers","length","undefined","action","objectSpread","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","_nextProps$project","match","params","getProject","updateProject","disabled","_ref3","_callee3","_context3","_x3","_ref4","_callee4","_context4","put","_x4","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_prop","ProjectTasks_ProjectTask","todoItems","inProgressItems","doneItems","i","status","ProjectBoard","getBacklog","BoardContent","errorMessage","role","ProjectBoard_Backlog","boardAlgo","propTpes","PropTypes","object","isRequired","func","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","update_At","_nextProps$project_ta","_this$props$match$par","getProjectTask","updateProjectTask","Landing","Register","username","password","confirmPassword","newUser","createNewUser","required","Login","loginRequest","login","decoded","setItem","jwt_decode","component","otherProps","objectWithoutProperties","Route","assign","render","Redirect","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","es","BrowserRouter","Layout_Header","exact","path","Switch","SecureRoute","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.36aefb33.chunk.js","sourcesContent":["//user action related\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n//project action types\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n\n//Backlog action types\nexport const GET_BACKLOG= \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";","import React,{Component} from 'react'\nimport {Link} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport {deleteProject} from \"../../actions/projectActions\";\n\nclass ProjectItem extends Component {\n    onDeleteClick = id => {\n        this.props.deleteProject(id);\n    };\n    render() {\n        const {project} = this.props;\n        return (\n            <div className=\"container\">\n                <div className=\"card card-body bg-light mb-3\">\n                    <div className=\"row\">\n                        <div className=\"col-2\">\n                            <span className=\"mx-auto\">{project.projectIdentifier}</span>\n                        </div>\n                        <div className=\"col-lg-6 col-md-4 col-8\">\n                            <h3>{project.projectName}</h3>\n                            <p>{project.description}</p>\n                        </div>\n                        <div className=\"col-md-4 d-none d-lg-block\">\n                            <ul className=\"list-group\">\n                                <Link to={`projectBoard/${project.projectIdentifier}`}>\n                                    <li className=\"list-group-item board\">\n                                        <span><i className=\"fas fa-chalkboard\"> Project Board </i></span>\n                                    </li>\n                                </Link>\n                                <Link to={`updateProject/${project.projectIdentifier}`}>\n                                    <li className=\"list-group-item update\">\n                                        <span><i className=\"fas fa-edit\"> Update Project Info</i></span>\n                                    </li>\n                                </Link>\n\n                                    <li className=\"list-group-item delete\" onClick={this.onDeleteClick.bind(this, project.projectIdentifier)}>\n                                        <span><i className=\"fas fa-minus-circle\"> Delete Project</i></span>\n                                    </li>\n\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nProjectItem.propTypes = {\n    deleteProject: PropTypes.func.isRequired\n};\n\nexport default connect(null, {deleteProject})(ProjectItem);","import axios from \"axios\";\nimport {GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT} from \"./types\";\n\nexport const createProject = (project, history) => async dispatch => {\n    try {\n        await axios.post(\"/api/projects\", project);\n        history.push(\"/dashboard\");\n        dispatch ({\n            type : GET_ERRORS,\n            payload : {}\n        })\n    } catch (e) {\n        dispatch ({\n            type : GET_ERRORS,\n            payload : e.response.data\n        })\n    }\n};\n\nexport const getProjects = () => async dispatch => {\n    const res = await axios.get(\"/api/projects\");\n    dispatch ({\n        type : GET_PROJECTS,\n        payload : res.data\n    })\n};\n\nexport const getProject = (id, history) => async dispatch => {\n    try {\n        const res = await axios.get(`/api/projects/${id}`);\n        dispatch ({\n            type : GET_PROJECT,\n            payload : res.data\n        });\n    } catch (error) {\n        history.push(\"/dashboard\")\n    }\n\n};\n\nexport const updateProject = (id, project, history) => async dispatch => {\n    try {\n        await axios.put(`/api/projects/${id}`, project);\n        history.push(\"/dashboard\");\n        dispatch ({\n            type : GET_ERRORS,\n            payload : {}\n        })\n    } catch (e) {\n        dispatch ({\n            type : GET_ERRORS,\n            payload : e.response.data.body\n        })\n    }\n};\n\nexport const deleteProject = id => async dispatch => {\n    try {\n        if(window.confirm(\"Are you sure ? This will delete the project and all the data related to it \")) {\n            await axios.delete(`/api/projects/${id}`);\n            dispatch ({\n                type : DELETE_PROJECT,\n                payload : id\n            })\n        }\n\n    } catch (e) {\n        dispatch ({\n            type : GET_ERRORS,\n            payload : e.response.data.body\n        })\n    }\n};","import React from \"react\"\nimport {Link} from \"react-router-dom\"\n\nconst CreateProjectButton = () => {\n    return (\n        <React.Fragment>\n        <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n            Create a Project\n        </Link>\n        </React.Fragment>\n    )\n}\n\nexport default CreateProjectButton;","import React,{ Component } from 'react'\nimport ProjectItem from \"./Project/ProjectItem\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n\n    componentDidMount() {\n        this.props.getProjects();\n    }\n\n    render() {\n        const  { projects } = this.props.project;\n        return (\n            <div className=\"projects\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <h1 className=\"display-4 text-center\">Projects</h1>\n                            <br/>\n                                <CreateProjectButton/>\n                            <br/>\n                            <hr/>\n                            {projects.map(project => (\n                                <ProjectItem key={project.id} project={project}/>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDashboard.propTypes = {\n    project: PropTypes.object.isRequired,\n    getProjects: PropTypes.func.isRequired\n};\nconst mapStateToProps = state => ({\n    project : state.project\n\n});\n\nexport default connect(mapStateToProps, {getProjects})(Dashboard);","import axios from \"axios\";\n\nconst setJWTToken = token => {\n  if (token) {\n      axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n      delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setJWTToken;","import axios from \"axios\";\nimport {GET_ERRORS, SET_CURRENT_USER} from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/users/register\", newUser);\n    history.push(\"/login\");\n      dispatch ({\n          type : GET_ERRORS,\n          payload : {}\n      });\n  } catch (error) {\n      dispatch ({\n          type : GET_ERRORS,\n          payload : error.response.data\n      });\n  }\n};\n\nexport const login = loginRequest => async dispatch => {\n  try {\n    const res = await axios.post(\"/api/users/login\", loginRequest);\n    const { token } = res.data;\n    localStorage.setItem(\"jwtToken\", token);\n    setJWTToken(token);\n    const decoded = jwt_decode(token);\n    dispatch ({\n          type : SET_CURRENT_USER,\n          payload : decoded\n    });\n  } catch (err) {\n      dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n      });\n  }\n};\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n  dispatch ({\n    type : SET_CURRENT_USER,\n    payload : {}\n  });\n};","import React, {Component} from 'react'\nimport {Link} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\"\nimport {logout} from \"../../actions/securityActions\"\n\nclass Header extends Component {\n\n    logout() {\n      this.props.logout();\n      window.location.href= \"/\";\n    };\n\n\n    render() {\n\n        const {validToken, user} = this.props.security;\n\n        const userIsAuthenticated = (\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/dashboard\">\n                            Dashboard\n                        </Link>\n                    </li>\n                </ul>\n\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link \" to=\"/dashboard\">\n                            <i className=\"fas fa-user-circle mr-1\"></i>\n                            {user.fullName}\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/logout\" onClick={this.logout.bind(this)}>\n                            Logout\n\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        );\n\n        const userIsNotAuthenticated = (\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link \" to=\"/register\">\n                            Sign Up\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/login\" >\n                            Login\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        );\n\n\n        let headerLinks;\n        if (validToken && user) {\n            headerLinks = userIsAuthenticated;\n        } else {\n            headerLinks = userIsNotAuthenticated;\n        }\n\n        return (\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n                <div className=\"container\">\n                    <Link className=\"navbar-brand\" to=\"/\">\n                        Personal Project Management Tool\n                    </Link>\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\n                        <span className=\"navbar-toggler-icon\"/>\n                    </button>\n                    {headerLinks}\n                </div>\n            </nav>\n        );\n    }\n}\n\nHeader.propTypes = {\n    logout: PropTypes.func.isRequired,\n    security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n   security: state.security\n});\n\nexport default connect(mapStateToProps, {logout})(Header);","import React,{Component} from 'react';\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport {createProject} from \"../../actions/projectActions\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            projectName : \"\",\n            projectIdentifier : \"\",\n            description : \"\",\n            startDate : \"\",\n            endDate : \"\",\n            errors: {}\n        };\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (nextProps.errors) {\n            this.setState({errors : nextProps.errors});\n        }\n    }\n\n    onChange(e) {\n        this.setState({[e.target.name] : e.target.value});\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const newProject = {\n            projectName : this.state.projectName,\n            projectIdentifier : this.state.projectIdentifier,\n            description : this.state.description,\n            startDate : this.state.startDate,\n            endDate : this.state.endDate\n        };\n    this.props.createProject(newProject, this.props.history)\n    }\n\n    render() {\n\n        const {errors} = this.state;\n\n        return(\n            <div>\n                <div className=\"project\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-8 m-auto\">\n                                <h5 className=\"display-4 text-center\">Create Project form</h5>\n                                <hr/>\n                                <form onSubmit={this.onSubmit}>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"text\"\n                                            className={classnames(\"form-control form-control-lg \", {\"is-invalid\" : errors.projectName })}\n                                            placeholder=\"Project Name\"\n                                            name=\"projectName\"\n                                            value={this.state.projectName}\n                                            onChange={this.onChange}/>\n                                            {errors.projectName && (\n                                                <div className=\"invalid-feedback\">{errors.projectName}</div>\n                                            )}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"text\"\n                                            className={classnames(\"form-control form-control-lg\", {\"is-invalid\" : errors.projectIdentifier})}\n                                            placeholder=\"Unique Project ID\"\n                                            name=\"projectIdentifier\"\n                                            value={this.state.projectIdentifier}\n                                            onChange={this.onChange}/>\n                                            {errors.projectIdentifier && (\n                                                <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>\n                                            )}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <textarea\n                                            className={classnames(\"form-control form-control-lg\", {\"is-invalid\" : errors.description})}\n                                            placeholder=\"Project Description\"\n                                            name=\"description\"\n                                            value={this.state.description}\n                                            onChange={this.onChange}>\n                                        </textarea>\n                                        {errors.description && (\n                                            <div className=\"invalid-feedback\">{errors.description}</div>\n                                        )}\n                                    </div>\n                                    <h6>Start Date</h6>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"date\"\n                                            className=\"form-control form-control-lg\"\n                                            name=\"startDate\"\n                                            value={this.state.startDate}\n                                            onChange={this.onChange}/>\n                                    </div>\n                                    <h6>Estimated End Date</h6>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"date\"\n                                            className=\"form-control form-control-lg\"\n                                            name=\"endDate\"\n                                            value={this.state.endDate}\n                                            onChange={this.onChange}/>\n                                    </div>\n\n                                    <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\"/>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nAddProject.propTypes = {\n    createProject : PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\n\nconst mapStateToProps = state => ({\n    errors : state.errors\n});\n\nexport default  connect(mapStateToProps, {createProject})(AddProject);","import {GET_ERRORS} from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_ERRORS:\n            return action.payload;\n\n        default:\n            return state;\n    }\n}","import {GET_PROJECTS, GET_PROJECT, DELETE_PROJECT} from \"../actions/types\";\n\nconst initialState = {\n    projects : [],\n    project : {}\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case GET_PROJECTS:\n            return {\n                ...state,\n                projects: action.payload\n            };\n        case GET_PROJECT:\n            return {\n                ...state,\n                project: action.payload\n            };\n        case DELETE_PROJECT:\n            return {\n                ...state,\n                projects: state.projects.filter(project => project.projectIdentifier !== action.payload)\n            };\n        default:\n            return state;\n    }\n}","import {\n    GET_BACKLOG,\n    GET_PROJECT_TASK,\n    DELETE_PROJECT_TASK,\n\n} from \"../actions/types\";\n\nconst initialState = {\n    project_tasks: [],\n    project_task: {}\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case GET_BACKLOG:\n            return {\n                ...state,\n                project_tasks: action.payload\n            };\n        case GET_PROJECT_TASK:\n            return {\n                ...state,\n                project_task: action.payload\n            };\n        case DELETE_PROJECT_TASK:\n            return {\n                ...state,\n                project_tasks: state.project_tasks.filter(project_task => project_task.projectSequence !== action.payload)\n            };\n        default:\n            return state;\n    }\n}","import {SET_CURRENT_USER} from \"../actions/types\";\n\nconst initialState = {\n  user : {},\n  validToken : false\n};\n\nconst booleanActionPayload = payload => {\n    if (payload) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                validToken: booleanActionPayload(action.payload),\n                user: action.payload\n            };\n        default:\n            return state;\n\n    }\n}","import {combineReducers} from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\"\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n    errors : errorReducer,\n    project : projectReducer,\n    backlog: backlogReducer,\n    security: securityReducer\n});","import {createStore, applyMiddleware, compose} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n    store = createStore(rootReducer, initialState,\n        compose(applyMiddleware(...middleware),\n        ReactReduxDevTools));\n} else {\n    store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware)));\n}\n\nexport default store;","import React, {Component} from 'react';\nimport {getProject, updateProject} from \"../../actions/projectActions\";\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport classnames from 'classnames';\n\nclass UpdateProject extends Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            \"id\": \"\",\n            \"projectName\": \"\",\n            \"projectIdentifier\": \"\",\n            \"description\": \"\",\n            \"startDate\": \"\",\n            \"endDate\": \"\",\n            \"errors\": {}\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({errors : nextProps.errors});\n        }\n        const {\n            id,\n            projectName,\n            projectIdentifier,\n            description,\n            startDate,\n            endDate\n        } = nextProps.project;\n\n        this.setState({\n            id,\n            projectName,\n            projectIdentifier,\n            description,\n            startDate,\n            endDate\n        });\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        const {id} = this.props.match.params;\n        this.props.getProject(id, this.props.history);\n    }\n\n    onChange(e) {\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const updateProject = {\n            \"id\": this.state.id,\n            \"projectName\": this.state.projectName,\n            \"projectIdentifier\": this.state.projectIdentifier,\n            \"description\": this.state.description,\n            \"startDate\": this.state.startDate,\n            \"endDate\": this.state.endDate\n        };\n\n        this.props.updateProject(updateProject.projectIdentifier, updateProject, this.props.history);\n\n    }\n\n    render() {\n        const {errors} = this.state;\n        return (\n            <div className=\"project\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h5 className=\"display-4 text-center\">Update Project form</h5>\n                            <hr/>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input type=\"text\"\n                                           className={classnames(\"form-control form-control-lg\", {\"is-invalid\" : errors.projectName })}\n                                           placeholder=\"Project Name\"\n                                           name=\"projectName\"\n                                           value={this.state.projectName}\n                                           onChange={this.onChange}/>\n                                    {errors.projectName && (\n                                        <div className=\"invalid-feedback\">{errors.projectName}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" className={classnames(\"form-control form-control-lg\", {\"is-invalid\" : errors.projectIdentifier})}\n                                           placeholder=\"Unique Project ID\"\n                                           name=\"projectIdentifier\"\n                                           value={this.state.projectIdentifier}\n                                           disabled/>\n                                    {errors.projectIdentifier && (\n                                        <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <textarea className={classnames(\"form-control form-control-lg\", {\"is-invalid\" : errors.description})}\n                                              placeholder=\"Project Description\"\n                                              name=\"description\"\n                                              value={this.state.description}\n                                              onChange={this.onChange}></textarea>\n                                    {errors.description && (\n                                        <div className=\"invalid-feedback\">{errors.description}</div>\n                                    )}\n                                </div>\n                                <h6>Start Date</h6>\n                                <div className=\"form-group\">\n                                    <input type=\"date\" className=\"form-control form-control-lg\"\n                                           name=\"startDate\"\n                                           value={this.state.startDate}\n                                           onChange={this.onChange}/>\n                                </div>\n                                <h6>Estimated End Date</h6>\n                                <div className=\"form-group\">\n                                    <input type=\"date\" className=\"form-control form-control-lg\"\n                                           name=\"endDate\"\n                                           value={this.state.endDate}\n                                           onChange={this.onChange}/>\n                                </div>\n\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\"/>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUpdateProject.propTypes = {\n    getProject: PropTypes.func.isRequired,\n    updateProject: PropTypes.func.isRequired,\n    project: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n\n};\n\nconst mapStateToProps = state => ({\n    project: state.project.project,\n    errors: state.errors\n});\n\nexport default connect(mapStateToProps, {getProject, updateProject})(UpdateProject);\n","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {deleteProjectTask} from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\n\nclass ProjectTask extends Component {\n\n    onDeleteClick(backlog_id, pt_id) {\n        this.props.deleteProjectTask(backlog_id, pt_id);\n    };\n\n    render() {\n        const {project_task} = this.props;\n        let priorityString;\n        let priorityClass;\n\n        if (project_task.priority === 1) {\n            priorityClass = \"bg-danger text-light\";\n            priorityString = \"HIGH\";\n        }\n\n        if (project_task.priority === 2) {\n            priorityClass = \"bg-warning text-light\";\n            priorityString = \"MEDIUM\";\n        }\n\n        if (project_task.priority === 3) {\n            priorityClass = \"bg-info text-light\";\n            priorityString = \"LOW\";\n        }\n        return (\n            <div className=\"card mb-1 bg-light\">\n\n                <div className={`card-header text-primary ${priorityClass}`}>\n                    ID: {project_task.projectSequence} -- Priority: {priorityString}\n                </div>\n                <div className=\"card-body bg-light\">\n                    <h5 className=\"card-title\">{project_task.summary}</h5>\n                    <p className=\"card-text text-truncate \">\n                        {project_task.acceptanceCriteria}\n                    </p>\n                    <Link to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`} className=\"btn btn-primary\">\n                        View / Update\n                    </Link>\n\n                    <button className=\"btn btn-danger ml-4\" onClick={this.onDeleteClick.bind(this, project_task.projectIdentifier, project_task.projectSequence)}>\n                        Delete\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired\n};\n\nexport default connect(null, {deleteProjectTask})(ProjectTask);","import axios from \"axios\";\nimport {DELETE_PROJECT, DELETE_PROJECT_TASK, GET_BACKLOG, GET_ERRORS, GET_PROJECT_TASK} from \"./types\";\n\nexport const addProjectTask = (backlog_id, project_task, history) => async dispatch => {\n    try {\n        await axios.post(`/api/backlog/${backlog_id}/tasks`, project_task);\n        history.push(`/projectBoard/${backlog_id}`);\n        dispatch ({\n            type : GET_ERRORS,\n            payload : {}\n        })\n    } catch (e) {\n        dispatch ({\n            type : GET_ERRORS,\n            payload : e.response.data\n        })\n    }\n};\n\nexport const getBacklog = backlog_id => async dispatch => {\n    try {\n        const res = await axios.get(`/api/backlog/${backlog_id}/tasks`);\n\n        dispatch ({\n            type : GET_BACKLOG,\n            payload : res.data\n        })\n    } catch (e) {\n        dispatch ({\n            type : GET_ERRORS,\n            payload : e.response.data\n        })\n    }\n};\n\nexport const getProjectTask = (backlog_id, pt_id, history) => async dispatch => {\n  try {\n      const res = await axios.get(`/api/backlog/${backlog_id}/tasks/${pt_id}`);\n      dispatch ({\n          type : GET_PROJECT_TASK,\n          payload : res.data\n      })\n  } catch (e) {\n      history.push(\"/dashboard\")\n  }\n};\n\nexport const updateProjectTask = (backlog_id, pt_id, project_task, history) => async dispatch => {\n    try {\n        await axios.put(`/api/backlog/${backlog_id}/tasks/${pt_id}`, project_task)\n        history.push(`/projectBoard/${backlog_id}`);\n        dispatch ({\n            type : GET_ERRORS,\n            payload : {}\n        })\n    } catch (e) {\n        dispatch ({\n            type : GET_ERRORS,\n            payload : e.response.data\n        })\n    }\n};\n\nexport const deleteProjectTask = (backlog_id, pt_id) =>async  dispatch => {\n    try {\n        if(window.confirm(\"Are you sure ? You are deleting task with id \" + pt_id + \". This action cannot be undone\")) {\n            await axios.delete(`/api/backlog/${backlog_id}/tasks/${pt_id}`);\n            dispatch ({\n                type : DELETE_PROJECT_TASK,\n                payload : pt_id\n            })\n        }\n\n    } catch (e) {\n        dispatch ({\n            type : GET_ERRORS,\n            payload : e.response.data.body\n        })\n    }\n}\n","import React, {Component} from 'react';\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\n\n\nclass Backlog extends Component {\n    render() {\n        const {project_tasks_prop} = this.props;\n        const tasks = project_tasks_prop.map(project_task => (\n            <ProjectTask key={project_task.id} project_task={project_task}/>\n        ));\n        let todoItems = [];\n        let inProgressItems = [];\n        let doneItems = [];\n\n        for (let i = 0; i < tasks.length; i++ ) {\n            if (tasks[i].props.project_task.status === \"TO_DO\" || tasks[i].props.project_task.status === \"TO DO\") {\n                todoItems.push(tasks[i]);\n            }\n            if (tasks[i].props.project_task.status === \"IN_PROGRESS\" ) {\n                inProgressItems.push(tasks[i]);\n            }\n            if (tasks[i].props.project_task.status === \"DONE\" ) {\n                doneItems.push(tasks[i]);\n            }\n        }\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <div className=\"card text-center mb-2\">\n                            <div className=\"card-header bg-secondary text-white\">\n                                <h3>TO DO</h3>\n                            </div>\n                        </div>\n                        {todoItems}\n                    </div>\n                    <div className=\"col-md-4\">\n                        <div className=\"card text-center mb-2\">\n                            <div className=\"card-header bg-primary text-white\">\n                                <h3>In Progress</h3>\n                            </div>\n                        </div>\n                        {inProgressItems}\n                    </div>\n                    <div className=\"col-md-4\">\n                        <div className=\"card text-center mb-2\">\n                            <div className=\"card-header bg-success text-white\">\n                                <h3>Done</h3>\n                            </div>\n                        </div>\n                        {doneItems}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Backlog;","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport {connect} from \"react-redux\";\nimport {getBacklog} from \"../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass ProjectBoard extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            errors: {}\n        }\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (nextProps.errors) {\n            this.setState({errors : nextProps.errors});\n        }\n    }\n\n    componentDidMount() {\n        const {id} = this.props.match.params;\n        this.props.getBacklog(id);\n    }\n\n    render() {\n\n        const {id} = this.props.match.params;\n        const {project_tasks} = this.props.backlog;\n        const {errors} = this.state;\n\n        let BoardContent;\n\n        const boardAlgo = (errors, project_tasks) => {\n            if (project_tasks.length < 1) {\n                if (errors.errorMessage) {\n                    return (<div className=\"alert alert-danger text-center\" role=\"alert\">{errors.errorMessage}</div>);\n                } else {\n                    return (<div className=\"alert alert-warning text-center\" role=\"alert\">No project task found</div>);\n\n                }\n            } else {\n                return (<Backlog project_tasks_prop={project_tasks}/>);\n            }\n        };\n\n        BoardContent = boardAlgo(errors, project_tasks);\n\n        return (\n            <div className=\"container\">\n                <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n                    <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n                </Link>\n                <br/>\n                <hr/>\n                {BoardContent}\n\n            </div>\n\n        );\n    }\n}\n\nProjectBoard.propTpes = {\n    backlog: PropTypes.object.isRequired,\n    getBacklog: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    backlog: state.backlog,\n    errors: state.errors\n});\n\nexport default connect(mapStateToProps, {getBacklog})(ProjectBoard);","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {addProjectTask} from \"../../../actions/backlogActions\";\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\n\n\nclass AddProjectTask extends Component {\n    constructor(props) {\n        super(props);\n\n        const {id} = this.props.match.params;\n\n        this.state = {\n            \"summary\": \"\",\n            \"acceptanceCriteria\": \"\",\n            \"status\": \"\",\n            \"priority\": 0,\n            \"dueDate\": \"\",\n            \"projectIdentifier\": id,\n            \"errors\": {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    };\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (nextProps.errors) {\n            this.setState({errors : nextProps.errors});\n        }\n    }\n\n    onChange(e) {\n        this.setState({[e.target.name] : e.target.value});\n    };\n\n    onSubmit(e) {\n        const {id} = this.props.match.params;\n        e.preventDefault();\n        const newTask = {\n            summary: this.state.summary,\n            acceptanceCriteria: this.state.acceptanceCriteria,\n            status: this.state.status,\n            priority: this.state.priority,\n            dueDate: this.state.dueDate\n        };\n        this.props.addProjectTask(id, newTask, this.props.history)\n\n    };\n\n    render() {\n        const {id} = this.props.match.params;\n        const {errors} = this.state;\n\n\n        return (\n            <div className=\"add-PBI\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                                Back to Project Board\n                            </Link>\n                            <h4 className=\"display-4 text-center\">Add /Update Project Task</h4>\n                            <p className=\"lead text-center\">Project Name + Project Code</p>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" className={classnames(\"form-control form-control-lg \", {\"is-invalid\" : errors.summary })}\n                                           name=\"summary\"\n                                           placeholder=\"Project Task summary\"\n                                           value={this.state.summary}\n                                           onChange={this.onChange} />\n                                           {errors.summary && (\n                                                <div className=\"invalid-feedback\">{errors.summary}</div>\n                                            )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <textarea className=\"form-control form-control-lg\"\n                                              placeholder=\"Acceptance Criteria\"\n                                              name=\"acceptanceCriteria\"\n                                              value={this.state.acceptanceCriteria}\n                                              onChange={this.onChange}></textarea>\n                                </div>\n                                <h6>Due Date</h6>\n                                <div className=\"form-group\">\n                                    <input type=\"date\" className=\"form-control form-control-lg\"\n                                           name=\"dueDate\"\n                                           value={this.state.dueDate}\n                                           onChange={this.onChange}/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <select className=\"form-control form-control-lg\"\n                                            name=\"priority\"\n                                            value={this.state.priority}\n                                            onChange={this.onChange}>\n                                        <option value={0}>Select Priority</option>\n                                        <option value={1}>High</option>\n                                        <option value={2}>Medium</option>\n                                        <option value={3}>Low</option>\n                                    </select>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <select className=\"form-control form-control-lg\"\n                                            name=\"status\"\n                                            value={this.state.status}\n                                            onChange={this.onChange}>\n                                        <option value=\"\">Select Status</option>\n                                        <option value=\"TO_DO\">TO DO</option>\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                                        <option value=\"DONE\">DONE</option>\n                                    </select>\n                                </div>\n\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\"/>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAddProjectTask.propTypes = {\n    addProjectTask: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    errors : state.errors\n});\n\nexport default connect(mapStateToProps, {addProjectTask})(AddProjectTask);","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport {connect} from \"react-redux\";\nimport {getProjectTask, updateProjectTask} from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\n\nclass UpdateProjectTask extends Component {\n\n    constructor () {\n      super();\n      this.state = {\n          id: \"\",\n          projectSequence: \"\",\n          summary: \"\",\n          acceptanceCriteria: \"\",\n          status: \"\",\n          priority: 0,\n          dueDate: \"\",\n          create_At: \"\",\n          update_At: \"\",\n          projectIdentifier: \"\",\n          errors: {}\n      };\n      this.onChange = this.onChange.bind(this);\n      this.onSubmit = this.onSubmit.bind(this);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        const {\n            id,\n            projectSequence,\n            summary,\n            acceptanceCriteria,\n            status,\n            priority,\n            dueDate,\n            create_At,\n            update_At,\n            projectIdentifier\n        } = nextProps.project_task;\n\n        this.setState({id,\n            projectSequence,\n            summary,\n            acceptanceCriteria,\n            status,\n            priority,\n            dueDate,\n            create_At,\n            update_At,\n            projectIdentifier});\n\n        if (nextProps.errors) {\n            this.setState({errors : nextProps.errors});\n        }\n    }\n\n    componentDidMount() {\n        const {backlog_id, pt_id} = this.props.match.params;\n        this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n    }\n\n    onChange(e) {\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const UpdateProjectTask = {\n            id: this.state.id,\n            projectSequence: this.state.projectSequence,\n            summary: this.state.summary,\n            acceptanceCriteria: this.state.acceptanceCriteria,\n            status: this.state.status,\n            priority: this.state.priority,\n            dueDate: this.state.dueDate,\n            create_At: this.state.create_At,\n            update_At: this.state.update_At,\n            projectIdentifier: this.state.projectIdentifier\n        };\n        this.props.updateProjectTask(UpdateProjectTask.projectIdentifier, UpdateProjectTask.projectSequence, UpdateProjectTask, this.props.history)\n    };\n\n    render() {\n        const {errors} = this.state;\n        return (\n            <div className=\"add-PBI\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <Link to={`/projectBoard/${this.state.projectIdentifier}`} className=\"btn btn-light\">\n                                Back to Project Board\n                            </Link>\n                            <h4 className=\"display-4 text-center\">Add /Update Project Task</h4>\n                            <p className=\"lead text-center\">Project Name : {this.state.projectIdentifier} + Project Task ID : {this.state.projectSequence}</p>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" className={classnames(\"form-control form-control-lg \", {\"is-invalid\" : errors.summary })}\n                                           name=\"summary\"\n                                           placeholder=\"Project Task summary\"\n                                           value={this.state.summary}\n                                           onChange={this.onChange} />\n                                    {errors.summary && (\n                                        <div className=\"invalid-feedback\">{errors.summary}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <textarea className=\"form-control form-control-lg\"\n                                              placeholder=\"Acceptance Criteria\"\n                                              name=\"acceptanceCriteria\"\n                                              value={this.state.acceptanceCriteria}\n                                              onChange={this.onChange}></textarea>\n                                </div>\n                                <h6>Due Date</h6>\n                                <div className=\"form-group\">\n                                    <input type=\"date\" className=\"form-control form-control-lg\"\n                                           name=\"dueDate\"\n                                           value={this.state.dueDate}\n                                           onChange={this.onChange}/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <select className=\"form-control form-control-lg\"\n                                            name=\"priority\"\n                                            value={this.state.priority}\n                                            onChange={this.onChange}>\n                                        <option value={0}>Select Priority</option>\n                                        <option value={1}>High</option>\n                                        <option value={2}>Medium</option>\n                                        <option value={3}>Low</option>\n                                    </select>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <select className=\"form-control form-control-lg\"\n                                            name=\"status\"\n                                            value={this.state.status}\n                                            onChange={this.onChange}>\n                                        <option value=\"\">Select Status</option>\n                                        <option value=\"TO_DO\">TO DO</option>\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                                        <option value=\"DONE\">DONE</option>\n                                    </select>\n                                </div>\n\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\"/>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUpdateProjectTask.propTypes = {\n    getProjectTask: PropTypes.func.isRequired,\n    project_task: PropTypes.object.isRequired,\n    updateProjectTask: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    project_task: state.backlog.project_task,\n    errors: state.errors\n});\n\nexport default connect(mapStateToProps, {getProjectTask, updateProjectTask})(UpdateProjectTask);","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nclass Landing extends Component {\n\n    componentDidMount() {\n        if (this.props.security.validToken) {\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n\n    render() {\n        return (\n            <div className=\"landing\">\n                <div className=\"light-overlay landing-inner text-dark\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12 text-center\">\n                                <h1 className=\"display-3 mb-4\">Personal Project Management Tool</h1>\n                                <p className=\"lead\">\n                                    Create your account to join active projects or start you own\n                                </p>\n                                <hr/>\n                                <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\n                                    Sign Up\n                                </Link>\n                                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\n                                    Login\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nLanding.propTypes = {\n    security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    security: state.security\n});\n\nexport default connect(mapStateToProps)(Landing);","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {createNewUser} from \"../../actions/securityActions\";\nimport {connect} from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            fullName: \"\",\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n    };\n\n    componentDidMount() {\n        if (this.props.security.validToken) {\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (nextProps.errors) {\n            this.setState({errors : nextProps.errors});\n        }\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const newUser = {\n            username: this.state.username,\n            password: this.state.password,\n            confirmPassword: this.state.confirmPassword,\n            fullName: this.state.fullName\n        };\n\n        this.props.createNewUser(newUser, this.props.history);\n    }\n\n    onChange(e) {\n        this.setState({[e.target.name] : e.target.value})\n    };\n\n    render() {\n\n        const {errors} = this.state;\n\n        return (\n            <div className=\"register\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h1 className=\"display-4 text-center\">Sign Up</h1>\n                            <p className=\"lead text-center\">Create your Account</p>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input type=\"text\"\n                                           className={classnames(\"form-control form-control-lg\", {\"is-invalid\" : errors.fullName })}\n                                           placeholder=\"Full Name\"\n                                           name=\"fullName\"\n                                           value={this.state.fullName}\n                                           onChange={this.onChange}\n                                           required/>\n                                    {errors.fullName && (\n                                        <div className=\"invalid-feedback\">{errors.fullName}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"email\"\n                                           className={classnames(\"form-control form-control-lg\", {\"is-invalid\" : errors.username })}\n                                           placeholder=\"Email Address (Username)\"\n                                           name=\"username\"\n                                           value={this.state.username}\n                                           onChange={this.onChange}/>\n                                    {errors.username && (\n                                        <div className=\"invalid-feedback\">{errors.username}</div>\n                                    )}\n\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"password\"\n                                           className={classnames(\"form-control form-control-lg\", {\"is-invalid\" : errors.password })}\n                                           placeholder=\"Password\"\n                                           name=\"password\"\n                                           value={this.state.password}\n                                           onChange={this.onChange}/>\n                                    {errors.password && (\n                                        <div className=\"invalid-feedback\">{errors.password}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"password\"\n                                           className={classnames(\"form-control form-control-lg\", {\"is-invalid\" : errors.confirmPassword })}\n                                           placeholder=\"Confirm Password\"\n                                           name=\"confirmPassword\"\n                                           value={this.state.confirmPassword}\n                                           onChange={this.onChange}/>\n                                    {errors.confirmPassword && (\n                                        <div className=\"invalid-feedback\">{errors.confirmPassword}</div>\n                                    )}\n                                </div>\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\"/>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nRegister.propTypes = {\n    createNewUser : PropTypes.func.isRequired,\n    errors : PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    errors: state.errors,\n    security: state.security\n});\n\nexport default connect(mapStateToProps, {createNewUser})(Register);","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {login} from \"../../actions/securityActions\";\nimport {connect} from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: \"\",\n            password: \"\",\n            errors: {}\n        };\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n    };\n\n    componentDidMount() {\n        if (this.props.security.validToken) {\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (nextProps.security.validToken) {\n            this.props.history.push(\"/dashboard\");\n        }\n        if (nextProps.errors) {\n            this.setState({errors : nextProps.errors});\n        }\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const loginRequest = {\n            username: this.state.username,\n            password: this.state.password\n        };\n\n        this.props.login(loginRequest);\n    }\n\n    onChange(e) {\n        this.setState({[e.target.name] : e.target.value})\n    };\n\n    render() {\n        const {errors} = this.state;\n        return (\n            <div className=\"login\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h1 className=\"display-4 text-center\">Log In</h1>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input type=\"email\"\n                                           className={classnames(\"form-control form-control-lg\", {\"is-invalid\" : errors.username })}\n                                           placeholder=\"Email Address\"\n                                           name=\"username\"\n                                           value={this.state.username}\n                                           onChange={this.onChange}/>\n                                    {errors.username && (\n                                        <div className=\"invalid-feedback\">{errors.username}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"password\"\n                                           className={classnames(\"form-control form-control-lg\", {\"is-invalid\" : errors.password })}\n                                           placeholder=\"Password\"\n                                           name=\"password\"\n                                           value={this.state.password}\n                                           onChange={this.onChange}/>\n                                    {errors.password && (\n                                        <div className=\"invalid-feedback\">{errors.password}</div>\n                                    )}\n                                </div>\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\"/>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nLogin.propTypes = {\n    login: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n\n};\n\nconst mapStateToProps = state => ({\n    errors: state.errors,\n    security: state.security\n});\nexport default connect(mapStateToProps, {login})(Login);","import React, {Component} from 'react';\nimport {Route, Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({component:Component,security, ...otherProps}) => (\n    <Route {...otherProps} render={props => security.validToken === true ?\n        (<Component {...props} />) :\n        <Redirect to=\"/login\" />}\n    />\n);\n\nSecuredRoute.propTypes = {\n    security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    security: state.security\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);","import React, { Component } from 'react';\nimport './App.css';\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport {SET_CURRENT_USER} from \"./actions/types\";\nimport {logout} from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\"\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type : SET_CURRENT_USER,\n    payload : decoded_jwtToken\n  });\n\n  const currentTime = Date.now()/1000\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n        <Provider store={store}>\n            <Router>\n              <div className=\"App\">\n                <Header/>\n                <Route exact path=\"/\" component={Landing}/>\n                <Route exact path=\"/register\" component={Register}/>\n                <Route exact path=\"/login\" component={Login}/>\n                <Switch>\n                <SecuredRoute exact path=\"/dashboard\" component={Dashboard}/>\n                <SecuredRoute exact path=\"/addProject\" component={AddProject}/>\n                <SecuredRoute exact path=\"/updateProject/:id\" component={UpdateProject}/>\n                <SecuredRoute exact path=\"/projectBoard/:id\" component={ProjectBoard}/>\n                <SecuredRoute exact path=\"/addProjectTask/:id\" component={AddProjectTask}/>\n                <SecuredRoute exact path=\"/updateProjectTask/:backlog_id/:pt_id\" component={UpdateProjectTask}/>\n                </Switch>\n              </div>\n            </Router>\n        </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}